#include <iostream>
using namespace std;

class Matrix {
    int rows, cols;
    int** data;

public:
    Matrix(int r, int c) : rows(r), cols(c) {
        data = new int*[rows];
        for (int i = 0; i < rows; ++i) {
            data[i] = new int[cols]{0};
        }
    }

    ~Matrix() {
        for (int i = 0; i < rows; ++i) {
            delete[] data[i];
        }
        delete[] data;
    }

    void input() {
        cout << "Enter elements of the matrix:" << endl;
        for (int i = 0; i < rows; ++i) {
            for (int j = 0; j < cols; ++j) {
                cin >> data[i][j];
            }
        }
    }

    void display() const {
        for (int i = 0; i < rows; ++i) {
            for (int j = 0; j < cols; ++j) {
                cout << data[i][j] << " ";
            }
            cout << endl;
        }
    }

    Matrix operator+(const Matrix& other) {
        Matrix result(rows, cols);
        for (int i = 0; i < rows; ++i) {
            for (int j = 0; j < cols; ++j) {
                result.data[i][j] = data[i][j] + other.data[i][j];
            }
        }
        return result;
    }
};

class Array {
public:
    void sum(int arr1[], int arr2[], int size, int result[]) {
        for (int i = 0; i < size; ++i) {
            result[i] = arr1[i] + arr2[i];
        }
    }
};

int main() {
    Matrix mat1(2, 2), mat2(2, 2);
    cout << "Matrix 1:" << endl;
    mat1.input();
    cout << "Matrix 2:" << endl;
    mat2.input();

    Matrix matSum = mat1 + mat2;
    cout << "Sum of Matrices:" << endl;
    matSum.display();

    const int size = 3;
    int arr1[size] = {1, 2, 3};
    int arr2[size] = {4, 5, 6};
    int arrResult[size];

    Array arraySum;
    arraySum.sum(arr1, arr2, size, arrResult);

    cout << "Sum of Arrays: ";
    for (int i = 0; i < size; ++i) {
        cout << arrResult[i] << " ";
    }
    cout << endl;

    return 0;
}
